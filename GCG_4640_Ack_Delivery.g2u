Program.Sub.ScreenSU.Start
Gui.F_ContactList..create
Gui.F_ContactList..caption("Email Acknowledgment")
Gui.F_ContactList..size(7485,3870)
Gui.F_ContactList..position(0,0)
Gui.F_ContactList..event(UnLoad,f_contactlist_unload)
Gui.F_ContactList..forecolor(0)
Gui.F_ContactList..fontstyle(,,)
Gui.F_ContactList..BackColor(-2147483633)
Gui.F_ContactList..mousepointer(0)
Gui.F_ContactList..MinX(0)
Gui.F_ContactList..MinY(0)
Gui.F_ContactList.lstEmails.create(listbox)
Gui.F_ContactList.lstEmails.size(3045,1050)
Gui.F_ContactList.lstEmails.position(4000,500)
Gui.F_ContactList.lstEmails.tabstop(True)
Gui.F_ContactList.lstEmails.tabindex(4)
Gui.F_ContactList.txtEmail.create(textbox,"",True,3690,300,0,100,1200,True,0,Arial,8,-2147483643,1)
Gui.F_ContactList.txtEmail.tabstop(True)
Gui.F_ContactList.txtEmail.tabindex(2)
Gui.F_ContactList.cboContact.create(combobox)
Gui.F_ContactList.cboContact.size(3690,330)
Gui.F_ContactList.cboContact.position(100,500)
Gui.F_ContactList.cboContact.event(Click,cbocontact_click)
Gui.F_ContactList.cboContact.tabstop(True)
Gui.F_ContactList.cboContact.tabindex(1)
Gui.F_ContactList.cmdAdd.create(button)
Gui.F_ContactList.cmdAdd.caption("Add")
Gui.F_ContactList.cmdAdd.size(840,375)
Gui.F_ContactList.cmdAdd.position(100,1600)
Gui.F_ContactList.cmdAdd.event(Click,cmdadd_click)
Gui.F_ContactList.cmdAdd.tabstop(True)
Gui.F_ContactList.cmdAdd.tabindex(3)
Gui.F_ContactList.cmdRemove.create(button)
Gui.F_ContactList.cmdRemove.caption("Remove")
Gui.F_ContactList.cmdRemove.size(810,375)
Gui.F_ContactList.cmdRemove.position(1100,1600)
Gui.F_ContactList.cmdRemove.event(Click,cmdremove_click)
Gui.F_ContactList.cmdRemove.tabstop(True)
Gui.F_ContactList.cmdRemove.tabindex(5)
Gui.F_ContactList.lbl1.create(label,"Choose an existing contact",True,2565,255,1,100,300,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.lbl2.create(label,"Enter an email address",True,2850,255,1,100,1000,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.cmdSend.create(button)
Gui.F_ContactList.cmdSend.caption("Send")
Gui.F_ContactList.cmdSend.size(855,360)
Gui.F_ContactList.cmdSend.position(105,3045)
Gui.F_ContactList.cmdSend.event(Click,cmdsend_click)
Gui.F_ContactList.cmdSend.tabstop(True)
Gui.F_ContactList.cmdSend.tabindex(8)
Gui.F_ContactList.txtSubject.create(textbox,"",True,6930,300,0,85,2625,True,0,Arial,8,-2147483643,1)
Gui.F_ContactList.txtSubject.maxLength(72)
Gui.F_ContactList.txtSubject.tabstop(True)
Gui.F_ContactList.txtSubject.tabindex(6)
Gui.F_ContactList.lbl3.create(label,"Subject",True,1935,255,1,100,2400,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.lbl5.create(label,"Recipients",True,1935,255,1,4000,300,True,0,Arial,8,-2147483633,0)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Variable.Global.sOrder.Declare(String)
Variable.Global.sList.Declare(String)
Variable.Global.sCust.Declare(String)
Variable.Global.sType.Declare(String)
Variable.Global.sCustFull.Declare(String)
Variable.Global.sCustName.Declare(String)
Variable.Global.sText.Declare(String)
Variable.Global.sAttach.Declare(String)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare(String)
V.Local.sRptID.Declare(String)
V.Local.sParams.Declare(String)
V.Local.sValues.Declare(String)
V.Local.sAttach.Declare(String)
V.Local.sOrderNo.Declare(String)
V.Local.sFile.Declare(String)
V.Local.sText.Declare(String)
V.Local.sUserName.Declare(String)
V.Local.sUserEmail.Declare(String)
V.Local.sCallParams.Declare(String)
V.Local.sDir.Declare(String)
V.Local.bRet.Declare(Boolean)
V.Local.sSql.Declare(String)
V.Local.sSubject.Declare(String)
V.Local.i.Declare(Long)
V.Local.sOrderFile.Declare(String)
V.Local.sMime.Declare(String)
v.Local.bExists.Declare(Boolean)
V.Local.sTemp.Declare(String)

'checking hook
F.Intrinsic.Control.If(V.Caller.Hook,=,11780)
	'canceling the core program so GAB can take over
	V.Passed.777777.Set(1)
	V.Global.sList.Redim(-1,-1)
	
	F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)

'	Building additional header so that the HTML shows up in the Body of the email properly.
'	F.Intrinsic.String.Build("MIME-Version: 1.0{0}Content-Type: multipart/related;{0} boundary={1}------------4DF0C139497F9372EEC9A7E8{1}{0}X-EsetId: 3D3C3F398EE628396C7F6E{0}{0}This is a multi-part message in MIME format.{0}--------------4DF0C139497F9372EEC9A7E8{0}Content-Type: text/html; charset=utf-8{0}Content-Transfer-Encoding: 8bit",V.Ambient.NewLine,V.Ambient.DblQuote,V.Local.sMime)

	F.Intrinsic.String.Build("{0}\Orders\",V.Caller.PluginsDir,V.Local.sDir)
	F.Intrinsic.File.DirExists(V.Local.sDir,V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet,=,False)
		F.Intrinsic.File.CreateDir(V.Local.sDir)
	F.Intrinsic.Control.EndIf

	'report id
	V.Local.sRptID.Set(54)

	'setting orderno
	V.Local.sOrderNo.Set(V.Passed.000003)
	F.Intrinsic.String.Format(V.Local.sOrderNo,"0000000",V.Local.sOrderNo)
	
	V.Global.sOrder.Set(V.Local.sOrderNo)
	
	F.Intrinsic.String.Build("Select Name_Customer From V_Customer_Master Where Customer = '{0}'",V.Passed.000006,V.Local.sSql)
	F.Data.DataTable.CreateFromSQL("Cust","con",V.Local.sSql,True)

	'email body
	F.Intrinsic.String.Build("{0}\GAB\GAS\Acknowledgement_Body_Text_{1}.htm",V.Caller.PluginsDir,V.Caller.CompanyCode,V.Local.sOrderNo,V.Local.sFile)

	F.Intrinsic.File.Exists(v.Local.sFile,v.Local.bExists) 
	f.Intrinsic.Control.If(v.Local.bExists,=,True) 
		F.Intrinsic.File.File2String(V.Local.sFile,V.Local.sText)
	F.Intrinsic.Control.Else
		f.Intrinsic.String.Build("{0}\GAB\GAS\Acknowledgement_Body_Text_ccc.htm",V.Caller.PluginsDir,v.Local.sFile) 
		f.Intrinsic.File.Exists(v.Local.sFile,v.Local.bExists) 
		f.Intrinsic.Control.If(v.Local.bExists,=,True) 
			f.Intrinsic.File.File2String(v.Local.sFile,v.Local.sText) 
		Function.Intrinsic.Control.Else 
			'if that doesn't exist use default. 
			F.Intrinsic.String.Build("Attached are your Order # {0}{1}, Thank you {2}.",V.Local.sOrderNo,V.Ambient.NewLine,V.Ambient.CompanyName,V.Local.sText) 
		Function.Intrinsic.Control.EndIf	
	F.Intrinsic.Control.EndIf

	F.Intrinsic.String.Replace(V.Local.sText,"{{ORDER}}",V.Local.sOrderNo,V.Local.sText)
	F.Intrinsic.Control.If(V.DataTable.Cust.RowCount--,<>,-1)
		F.Intrinsic.String.Replace(V.Local.sText,"{{CUSTOMER}}",V.DataTable.Cust(V.DataTable.Cust.RowCount--).Name_Customer!FieldValTrim,V.Local.sText)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Replace(V.Local.sText,"{{CUSTOMER}}","Valued Customer",V.Local.sText)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Replace(V.Local.sText,"{{COMPANY}}",V.Ambient.CompanyName,V.Local.sText)
	
	V.Local.sTemp.Redim(0,2)
	F.Intrinsic.String.Replace(V.Local.sText,"{{CUSTPO}}",V.Passed.000025,V.Local.sText)
	F.Intrinsic.String.Left(V.Passed.000024,4,V.Local.sTemp(0))
	F.Intrinsic.String.Mid(V.Passed.000024,5,2,V.Local.sTemp(1))
	F.Intrinsic.String.Right(V.Passed.000024,2,V.Local.sTemp(2))
	F.Intrinsic.String.Build("{0}/{1}/{2}",V.Local.sTemp(1),V.Local.sTemp(2),V.Local.sTemp(0),V.Local.sTemp)
	F.Intrinsic.String.Replace(V.Local.sText,"{{DUEDATE}}",V.Local.sTemp,V.Local.sText)

'	F.Intrinsic.String.Build("{0}{1}{1}--------------4DF0C139497F9372EEC9A7E8--",V.Local.sText,V.Ambient.NewLine,V.Local.sText)

	F.Intrinsic.String.Build("{0}\GSSRLLaunchFile",V.Caller.localgsstempdir,V.Local.sFile)
	F.Intrinsic.Task.SetEnvironmentVariable("GSSRLLAUNCHFILE",V.Local.sFile)

	'seting parameters and sending params to the callwrapper
	F.Intrinsic.String.Build("{0}!*!P!*!!*!|~|CRYSTAL-OVERRIDE|~|",V.Local.sOrderNo,V.Local.sCallParams)
	F.Global.General.CallWrapperSyncBio(910050,V.Local.sCallParams)

	'setting params for the report
	V.Local.sParams.Set("Terminal*!*ReportID*!*IncludesTax*!*Dec")

	F.Intrinsic.String.Build("{0}*!*0000{1}*!**!*",V.Caller.Terminal,V.Local.sRptID,V.Local.sValues)

	F.Intrinsic.String.Split(V.Local.sParams,"*!*",V.Local.sParams)
	F.Intrinsic.String.Split(V.Local.sValues,"*!*",V.Local.sValues)

	'Set attachment filename and path
	F.Intrinsic.String.Build("{1}.pdf*!*{0}\Orders\",V.Caller.PluginsDir,V.Local.sOrderNo,V.Local.sAttach)
	F.Intrinsic.String.Build("{0}\Orders\{1}.pdf",V.Caller.PluginsDir,V.Local.sOrderNo,V.Local.sOrderFile)

	'saving report to pdf
	F.Global.BI.SaveReport(V.Local.sRptID,1,V.Local.sParams,V.Local.sValues,V.Local.sOrderFile)

	F.Global.Security.GetFullName(V.Caller.User,V.Local.sUserName)
	F.Global.Security.GetUserEmail(V.Caller.User,V.Local.sUserEmail)

	F.Intrinsic.String.Build("Select Contact_Email From V_ORDER_BILL_TO Where Order_No = '{0}'",V.Local.sOrderNo,V.Local.sSql)

	F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sUserEmail,V.Local.sUserName,V.Local.sUserEmail)

	F.Data.DataTable.CreateFromSQL("Email","con",V.Local.sSql,True)

'	F.Intrinsic.Control.If(V.DataTable.Email.RowCount--,=,-1)
'		F.Intrinsic.UI.Msgbox("No Email as been set up for this Customer....")
'		F.Intrinsic.Control.CallSub("Exit")
'	F.Intrinsic.Control.EndIf
	'Read in the Default Subject file
	f.Intrinsic.String.Build("{0}\4640_Ack_Subject.txt",v.Caller.FilesDir,v.Local.sSubject)
	f.Intrinsic.File.Exists(v.Local.sSubject,v.Local.bExists)
	f.Intrinsic.Control.If(v.Local.bExists,=,True)
		'File exists so load it into the subject line
		f.Intrinsic.File.File2String(v.Local.sSubject,v.Local.sSubject)
		f.Intrinsic.String.Replace(v.Local.sSubject,"{{ORDER}}",V.Local.sOrderNo,v.Local.sSubject)
		F.Intrinsic.String.Replace(V.Local.sSubject,"{{CUSTPO}}",V.Passed.000025,V.Local.sSubject)
		Gui.F_ContactList.txtSubject.Text(v.Local.sSubject)
	f.Intrinsic.Control.EndIf

	V.Global.sText.Set(V.Local.sText)
	V.Global.sAttach.Set(V.Local.sAttach)
	
	F.Intrinsic.Control.CallSub(PopContacts)
	Gui.F_ContactList..Show
		
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch

F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.cmdadd_click.Start
F.Intrinsic.Control.Try

V.Local.i.Declare(Long)
V.Local.bFound.Declare(Boolean,False)

'Exit if no email selected or enetered
F.Intrinsic.Control.If(V.Screen.F_ContactList!txtEmail.Text,=,"")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'Search for email address in memory array  to avoid duplicates
F.Intrinsic.Control.For(V.Local.i,0,V.Global.sList.UBound,1)
	F.Intrinsic.Control.If(V.Screen.F_ContactList!cboContact.Text,=,V.Global.sList(v.Local.i))
		V.Local.bFound.Set(True)
		F.Intrinsic.Control.ExitFor(V.Local.i)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.i)

'If email not found in list, add it to memory array
F.Intrinsic.Control.If(V.Local.bFound,=,False)
	F.Intrinsic.Control.If(V.Global.sList.UBound,=,-1)
		V.Global.sList.Redim(0,0)
	F.Intrinsic.Control.Else
		V.Global.sList.RedimPreserve(0,v.Global.sList.UBound++)
	F.Intrinsic.Control.EndIf
	V.Global.sList(v.Global.sList.UBound).Set(V.Screen.F_ContactList!txtEmail.Text)
F.Intrinsic.Control.EndIf

'Fill list from memory array
F.Intrinsic.Control.CallSub(FillList)

'Clear email selection
Gui.F_ContactList.cboContact.ListIndex(0)
Gui.F_ContactList.txtEmail.Text("")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(TryCatch,"Sub",V.Ambient.CurrentSubroutine,"Error",V.Ambient.ErrorNumber,"Desc",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cmdadd_click.End

Program.Sub.f_contactlist_unload.Start
F.Intrinsic.Control.If(V.ODBC.con.State,=,1)
	F.ODBC.Connection!con.close
F.Intrinsic.Control.Endif
F.Intrinsic.Control.End

Program.Sub.f_contactlist_unload.End

Program.Sub.cmdremove_click.Start
f.Intrinsic.Control.Try

V.Local.i.Declare(Long)
V.Local.iStart.Declare(Long)
V.Local.iEnd.Declare(Long)
V.Local.iTemp.Declare(Long)
V.Local.bFound.Declare(Boolean)

'Exit if no email selected in list
F.Intrinsic.Control.If(V.Screen.F_ContactList!lstEmails.Text,=,"")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'Search memory array for ordinal of selected email
F.Intrinsic.Control.For(V.Local.iStart,0,V.Global.sList.UBound,1)
	F.Intrinsic.Control.If(V.Screen.F_ContactList!lstEmails.Text,=,V.Global.sList(v.Local.iStart))
		V.Local.bFound.Set(True)
		F.Intrinsic.Control.ExitFor(V.Local.iStart)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iStart)

'Shift memory array to remove selected email
F.Intrinsic.Math.Sub(V.Global.sList.UBound,1,V.Local.iEnd)
F.Intrinsic.Control.For(V.Local.i,V.Local.iStart,V.Local.iEnd,1)
	F.Intrinsic.Math.Add(V.Local.i,1,V.Local.iTemp)
	V.Global.sList(v.Local.i).set(V.Global.sList(v.Local.iTemp))
F.Intrinsic.Control.Next(V.Local.i)
F.Intrinsic.Control.If(V.Global.sList.UBound,=,0)
	V.Global.sList.Redim(-1,-1)
F.Intrinsic.Control.else
	V.Global.sList.RedimPreserve(0,V.Local.iEnd)
F.Intrinsic.Control.EndIf

'Fill list from memory array
F.Intrinsic.Control.CallSub(FillList)

'Clear email selection
Gui.F_ContactList.cboContact.ListIndex(0)
Gui.F_ContactList.txtEmail.Text("")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(TryCatch,"Sub",V.Ambient.CurrentSubroutine,"Error",V.Ambient.ErrorNumber,"Desc",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cmdremove_click.End

Program.Sub.cmdsend_click.Start
f.Intrinsic.Control.Try

V.Local.i.Declare(Long)
V.Local.sRcptEmail.Declare(String)
V.Local.sSenderEmail.Declare(String)
V.Local.sSenderName.Declare(String)
V.Local.sAttach.Declare(String)
V.Local.bExists.Declare(Boolean)
v.Local.sProgram.Declare(String)
v.Local.sRet.Declare(String)
v.Local.sFile.Declare(String)
v.Local.sText.Declare(String)
v.Local.sSQL.Declare(String)
v.Local.sName.Declare(String)
V.Local.iID.Declare(Long)
v.Local.sCRLF.Declare(String)

'End script if no emails added to list
F.Intrinsic.Control.If(V.Global.sList.UBound,=,-1)
	F.Intrinsic.Control.CallSub(f_contactlist_unload)
F.Intrinsic.Control.EndIf

Gui.F_ContactList..Visible(False)

F.Global.Security.getuserID(V.Caller.User,V.Caller.CompanyCode,V.Local.iID)

'Get email address of GS User
F.Global.Security.GetUserEmail(V.Caller.User,V.Local.sSenderEmail)
'Alert and end script if no email found for GS User
F.Intrinsic.control.if(V.Local.sSenderEmail,=,"")
	F.Intrinsic.UI.Msgbox("Error in email procedure.  The GS User does not have an email address associated with it in User Security Maintenance.")
	F.Intrinsic.Control.CallSub(f_contactlist_unload)
F.Intrinsic.control.endif
'Get full name of GS User
F.Global.Security.GetFullName(V.Caller.User,V.Local.sSenderName)

'Set up the Sender name and Email
F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sSenderEmail,V.Local.sSenderName,V.Local.sSenderEmail)
'Join the Recipient list together
f.Intrinsic.String.Join(v.Global.sList,"@!@*!*",v.Local.sRcptEmail)
f.Intrinsic.String.Build("*!*{0}",v.Local.sRcptEmail,v.Local.sRcptEmail)

'Send the email
'Replace LF by CRLF on the file to avoid email server issues with LF character 
F.Intrinsic.String.Concat(v.ASCII.13,v.ASCII.10,v.Local.sCRLF)'CRLF
F.Intrinsic.String.Replace(V.Global.sText,v.ASCII.10,v.Local.sCRLF,V.Global.sText)
F.Global.Messaging.QueueMessage(V.Caller.CompanyCode, V.Local.iID, "", V.Screen.F_ContactList!txtSubject.Text, V.Local.sSenderEmail, v.Local.sRcptEmail, "", 5, "", false, "", "", "", "", "", "", "", V.Global.sAttach, false, V.Global.sText)

'End script
F.Intrinsic.Control.CallSub(f_contactlist_unload)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(TryCatch,"Sub",V.Ambient.CurrentSubroutine,"Error",V.Ambient.ErrorNumber,"Desc",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cmdsend_click.End

Program.Sub.cbocontact_click.Start
f.Intrinsic.Control.Try

V.Local.iPos.Declare(Long)
V.Local.sEmail.Declare(String)

F.Intrinsic.Control.If(V.Screen.F_ContactList!cboContact.Text,<>,"")
	'Select contact from drop down list - populate textbox
	F.Intrinsic.String.Instr(V.Screen.F_ContactList!cboContact.Text,"<",V.Local.ipos)
	F.Intrinsic.String.mid(V.Screen.F_ContactList!cboContact.Text,V.Local.iPos,V.Local.sEmail)
	F.Intrinsic.String.Replace(V.Local.sEmail,"<","",V.Local.sEmail)
	F.Intrinsic.String.Replace(V.Local.sEmail,">","",V.Local.sEmail)
	Gui.F_ContactList.txtEmail.Text(V.Local.sEmail)
F.Intrinsic.Control.Else
	Gui.F_ContactList.txtEmail.Text("")
F.Intrinsic.Control.endif

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(TryCatch,"Sub",V.Ambient.CurrentSubroutine,"Error",V.Ambient.ErrorNumber,"Desc",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cbocontact_click.End

Program.Sub.PopContacts.Start
f.Intrinsic.Control.Try

V.Local.sSQL.Declare(String)
V.Local.sTemp.Declare(String)

'Add blank item to drop down list
Gui.F_ContactList.cboContact.AddItem("")

'Fill drop down list with contacts/emails for the customer on the order
F.Intrinsic.String.Build("Select RTRIM(Contact) as NAME, RTRIM(Contact) + ' <' + RTRIM(Contact_Email) + '>' as NAMEEMAIL From V_ORDER_BILL_TO Where Order_No = '{0}'",V.Global.sOrder,V.Local.sSql)

f.Data.Dictionary.CreateFromSQL("Contact","Con",v.Local.sSQL)
Gui.F_ContactList.cboContact.AddItems("Dictionary","Contact")
f.Data.Dictionary.Close("Contact")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(TryCatch,"Sub",V.Ambient.CurrentSubroutine,"Error",V.Ambient.ErrorNumber,"Desc",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.PopContacts.End

Program.Sub.FillList.Start
f.Intrinsic.Control.Try

V.Local.i.Declare(Long)

Gui.F_ContactList.lstEmails.ClearItems

'Fill listbox from memory array
F.Intrinsic.Control.For(V.Local.i,0,V.Global.sList.UBound,1)
	Gui.F_ContactList.lstEmails.AddItem(V.Global.sList(v.Local.i))
F.Intrinsic.Control.Next(V.Local.i)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(TryCatch,"Sub",V.Ambient.CurrentSubroutine,"Error",V.Ambient.ErrorNumber,"Desc",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.FillList.End

Program.Sub.Comments.Start
${$0$}$$}$$}$12:00:00 AM$}$False
Program.Sub.Comments.End