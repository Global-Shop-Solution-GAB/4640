Program.Sub.ScreenSU.Start
Gui.F_ContactList..create
Gui.F_ContactList..caption("Email Quick Quote")
Gui.F_ContactList..size(7485,3870)
Gui.F_ContactList..position(0,0)
Gui.F_ContactList..event(UnLoad,f_contactlist_unload)
Gui.F_ContactList..forecolor(0)
Gui.F_ContactList..fontstyle(,,,)
Gui.F_ContactList..BackColor(-2147483633)
Gui.F_ContactList..mousepointer(0)
Gui.F_ContactList..MinX(0)
Gui.F_ContactList..MinY(0)
Gui.F_ContactList.lstEmails.create(listbox)
Gui.F_ContactList.lstEmails.size(3045,1050)
Gui.F_ContactList.lstEmails.position(4000,500)
Gui.F_ContactList.lstEmails.tabstop(True)
Gui.F_ContactList.lstEmails.tabindex(4)
Gui.F_ContactList.txtEmail.create(textbox,"",True,3690,300,0,100,1200,True,0,Arial,8,-2147483643,1)
Gui.F_ContactList.txtEmail.tabstop(True)
Gui.F_ContactList.txtEmail.tabindex(2)
Gui.F_ContactList.cboContact.create(combobox)
Gui.F_ContactList.cboContact.size(3690,330)
Gui.F_ContactList.cboContact.position(100,500)
Gui.F_ContactList.cboContact.event(Click,cbocontact_click)
Gui.F_ContactList.cboContact.tabstop(True)
Gui.F_ContactList.cboContact.tabindex(1)
Gui.F_ContactList.cmdAdd.create(button)
Gui.F_ContactList.cmdAdd.caption("Add")
Gui.F_ContactList.cmdAdd.size(840,375)
Gui.F_ContactList.cmdAdd.position(100,1600)
Gui.F_ContactList.cmdAdd.event(Click,cmdadd_click)
Gui.F_ContactList.cmdAdd.tabstop(True)
Gui.F_ContactList.cmdAdd.tabindex(3)
Gui.F_ContactList.cmdRemove.create(button)
Gui.F_ContactList.cmdRemove.caption("Remove")
Gui.F_ContactList.cmdRemove.size(810,375)
Gui.F_ContactList.cmdRemove.position(1100,1600)
Gui.F_ContactList.cmdRemove.event(Click,cmdremove_click)
Gui.F_ContactList.cmdRemove.tabstop(True)
Gui.F_ContactList.cmdRemove.tabindex(5)
Gui.F_ContactList.lbl1.create(label,"Choose an existing contact",True,2565,255,1,100,300,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.lbl2.create(label,"Enter an email address",True,2850,255,1,100,1000,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.cmdSend.create(button)
Gui.F_ContactList.cmdSend.caption("Send")
Gui.F_ContactList.cmdSend.size(855,360)
Gui.F_ContactList.cmdSend.position(105,3045)
Gui.F_ContactList.cmdSend.event(Click,cmdsend_click)
Gui.F_ContactList.cmdSend.tabstop(True)
Gui.F_ContactList.cmdSend.tabindex(8)
Gui.F_ContactList.txtSubject.create(textbox,"",True,6930,300,0,85,2625,True,0,Arial,8,-2147483643,1)
Gui.F_ContactList.txtSubject.maxLength(72)
Gui.F_ContactList.txtSubject.tabstop(True)
Gui.F_ContactList.txtSubject.tabindex(6)
Gui.F_ContactList.lbl3.create(label,"Subject",True,1935,255,1,100,2400,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.lbl5.create(label,"Recipients",True,1935,255,1,4000,300,True,0,Arial,8,-2147483633,0)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Variable.Global.sCust.Declare(String)
Variable.Global.sQuote.Declare(String)
Variable.Global.sList.Declare(String)
Variable.Global.sType.Declare(String)
Variable.Global.sCustFull.Declare(String)
Variable.Global.sCustName.Declare(String)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try

v.Local.sProgram.Declare(String)
v.Local.bExists.Declare(Boolean)
v.Local.sSubject.Declare(String)

f.ODBC.Connection!con.OpenConnection(v.Ambient.PDSN,v.Ambient.PUser,v.Ambient.PPass)
'Hook 10850 Quote Email Button
'Get values from GSS

V.Global.sCust.Set(V.Passed.000006)
V.Global.sQuote.Set(V.Passed.000003)

V.Global.sType.Set("C")
f.Intrinsic.String.LPad(v.Global.sQuote.Trim,"0",7,v.Global.sQuote)

f.Intrinsic.String.Build("{0}\GCG_3623_Quote.g2u",v.Caller.GasDir,v.Local.sProgram)
'Make sure the program exists.
f.Intrinsic.File.Exists(v.Local.sProgram,v.Local.bExists)
f.Intrinsic.Control.If(v.Local.bExists,=,False)
	f.Intrinsic.Control.CallSub(f_contactlist_unload)
f.Intrinsic.Control.EndIf

'Set override flag
V.Passed.777777.Set(1)


V.Global.sList.Redim(-1,-1)

F.Intrinsic.Control.CallSub(PopContacts)

'Read in the Default Subject file
f.Intrinsic.String.Build("{0}\4640_Quote_Subject.txt",v.Caller.FilesDir,v.Local.sSubject)
f.Intrinsic.File.Exists(v.Local.sSubject,v.Local.bExists)
f.Intrinsic.Control.If(v.Local.bExists,=,True)
	'File exists so load it into the subject line
	f.Intrinsic.File.File2String(v.Local.sSubject,v.Local.sSubject)
	f.Intrinsic.String.Replace(v.Local.sSubject,"{{COMPANY}}",v.Ambient.CompanyName,v.Local.sSubject)
	f.Intrinsic.String.Replace(v.Local.sSubject,"{{QUOTE}}",v.Global.sQuote,v.Local.sSubject)
	Gui.F_ContactList.txtSubject.Text(v.Local.sSubject)
f.Intrinsic.Control.EndIf

Gui.F_ContactList..Show

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(TryCatch,"Sub",V.Ambient.CurrentSubroutine,"Error",V.Ambient.ErrorNumber,"Desc",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.TryCatch.Start
v.Local.sError.Declare(String)
Function.Intrinsic.String.Concat("Project: GCG_4640_QUOTE_EMAIL",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",v.Args.Sub,V.Ambient.NewLine,"Error Occurred ",V.Args.Error," with description ",v.Args.Desc,V.Local.sError)
F.Intrinsic.UI.Msgbox(V.Local.sError)
f.Intrinsic.Control.CallSub(f_contactlist_unload)
Program.Sub.TryCatch.End

Program.Sub.cmdadd_click.Start
F.Intrinsic.Control.Try

V.Local.i.Declare(Long)
V.Local.bFound.Declare(Boolean,False)

'Exit if no email selected or enetered
F.Intrinsic.Control.If(V.Screen.F_ContactList!txtEmail.Text,=,"")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'Search for email address in memory array  to avoid duplicates
F.Intrinsic.Control.For(V.Local.i,0,V.Global.sList.UBound,1)
	F.Intrinsic.Control.If(V.Screen.F_ContactList!cboContact.Text,=,V.Global.sList(v.Local.i))
		V.Local.bFound.Set(True)
		F.Intrinsic.Control.ExitFor(V.Local.i)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.i)

'If email not found in list, add it to memory array
F.Intrinsic.Control.If(V.Local.bFound,=,False)
	F.Intrinsic.Control.If(V.Global.sList.UBound,=,-1)
		V.Global.sList.Redim(0,0)
	F.Intrinsic.Control.Else
		V.Global.sList.RedimPreserve(0,v.Global.sList.UBound++)
	F.Intrinsic.Control.EndIf
	V.Global.sList(v.Global.sList.UBound).Set(V.Screen.F_ContactList!txtEmail.Text)
F.Intrinsic.Control.EndIf

'Fill list from memory array
F.Intrinsic.Control.CallSub(FillList)

'Clear email selection
Gui.F_ContactList.cboContact.ListIndex(0)
Gui.F_ContactList.txtEmail.Text("")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(TryCatch,"Sub",V.Ambient.CurrentSubroutine,"Error",V.Ambient.ErrorNumber,"Desc",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cmdadd_click.End

Program.Sub.f_contactlist_unload.Start
F.Intrinsic.Control.If(V.ODBC.con.State,=,1)
	F.ODBC.Connection!con.close
F.Intrinsic.Control.Endif
F.Intrinsic.Control.End

Program.Sub.f_contactlist_unload.End

Program.Sub.cmdremove_click.Start
f.Intrinsic.Control.Try

V.Local.i.Declare(Long)
V.Local.iStart.Declare(Long)
V.Local.iEnd.Declare(Long)
V.Local.iTemp.Declare(Long)
V.Local.bFound.Declare(Boolean)

'Exit if no email selected in list
F.Intrinsic.Control.If(V.Screen.F_ContactList!lstEmails.Text,=,"")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'Search memory array for ordinal of selected email
F.Intrinsic.Control.For(V.Local.iStart,0,V.Global.sList.UBound,1)
	F.Intrinsic.Control.If(V.Screen.F_ContactList!lstEmails.Text,=,V.Global.sList(v.Local.iStart))
		V.Local.bFound.Set(True)
		F.Intrinsic.Control.ExitFor(V.Local.iStart)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iStart)

'Shift memory array to remove selected email
F.Intrinsic.Math.Sub(V.Global.sList.UBound,1,V.Local.iEnd)
F.Intrinsic.Control.For(V.Local.i,V.Local.iStart,V.Local.iEnd,1)
	F.Intrinsic.Math.Add(V.Local.i,1,V.Local.iTemp)
	V.Global.sList(v.Local.i).set(V.Global.sList(v.Local.iTemp))
F.Intrinsic.Control.Next(V.Local.i)
F.Intrinsic.Control.If(V.Global.sList.UBound,=,0)
	V.Global.sList.Redim(-1,-1)
F.Intrinsic.Control.else
	V.Global.sList.RedimPreserve(0,V.Local.iEnd)
F.Intrinsic.Control.EndIf

'Fill list from memory array
F.Intrinsic.Control.CallSub(FillList)

'Clear email selection
Gui.F_ContactList.cboContact.ListIndex(0)
Gui.F_ContactList.txtEmail.Text("")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(TryCatch,"Sub",V.Ambient.CurrentSubroutine,"Error",V.Ambient.ErrorNumber,"Desc",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cmdremove_click.End

Program.Sub.cmdsend_click.Start
f.Intrinsic.Control.Try

V.Local.i.Declare(Long)
V.Local.sRcptEmail.Declare(String)
V.Local.sSenderEmail.Declare(String)
V.Local.sSenderName.Declare(String)
V.Local.sAttach.Declare(String)
V.Local.bExists.Declare(Boolean)
v.Local.sProgram.Declare(String)
v.Local.sRet.Declare(String)
v.Local.sFile.Declare(String)
v.Local.sText.Declare(String)
v.Local.sSQL.Declare(String)
v.Local.sName.Declare(String)
V.Local.iGlobalShopUserID.Declare(Long)
v.Local.sCRLF.Declare(String)
V.Local.sCRLFRegex.Declare(String)
V.Local.sAppendHeader.Declare(String)

'End script if no emails added to list
F.Intrinsic.Control.If(V.Global.sList.UBound,=,-1)
	F.Intrinsic.Control.CallSub(f_contactlist_unload)
F.Intrinsic.Control.EndIf

Gui.F_ContactList..Visible(False)

'Calling Quote program to export the Quote to PDF.
f.Intrinsic.String.Build("{0}\GCG_3623_Quote.g2u",v.Caller.GasDir,v.Local.sProgram)
'Passing the Quote number and True so that it knows to Export.
f.Intrinsic.String.Build("{0}@!@True",v.Global.sQuote,v.Local.sRet)
F.Global.Task.CallSyncGAS(v.Local.sProgram,V.Local.sRet,-1)

F.Global.Security.getuserID(V.Caller.User,V.Caller.CompanyCode,V.Local.iGlobalShopUserID)

'Get email address of GS User
F.Global.Security.GetUserEmail(V.Caller.User,V.Local.sSenderEmail)
'Alert and end script if no email found for GS User
F.Intrinsic.control.if(V.Local.sSenderEmail,=,"")
	F.Intrinsic.UI.Msgbox("Error in email procedure.  The GS User does not have an email address associated with it in User Security Maintenance.")
	F.Intrinsic.Control.CallSub(f_contactlist_unload)
F.Intrinsic.control.endif
'Get full name of GS User
F.Global.Security.GetFullName(V.Caller.User,V.Local.sSenderName)

'email body
F.Intrinsic.String.Build("{0}\GAB\GAS\Quote_Body_Text_{1}.htm",V.Caller.PluginsDir,V.Caller.CompanyCode,V.Local.sFile)
'Check to see if we have a company specific html
F.Intrinsic.File.Exists(v.Local.sFile,v.Local.bExists) 
f.Intrinsic.Control.If(v.Local.bExists,=,True) 
	'We do so use it.
	F.Intrinsic.File.File2String(V.Local.sFile,V.Local.sText)
F.Intrinsic.Control.Else
	'We don't have a company specific so use generic ccc
	f.Intrinsic.String.Build("{0}\GAB\GAS\Quote_Body_Text_ccc.htm",V.Caller.PluginsDir,v.Local.sFile) 
	f.Intrinsic.File.Exists(v.Local.sFile,v.Local.bExists) 
	f.Intrinsic.Control.If(v.Local.bExists,=,True) 
		'we have generic ccc
		f.Intrinsic.File.File2String(v.Local.sFile,v.Local.sText) 
	Function.Intrinsic.Control.Else 
		'if that doesn't exist use default. 
		F.Intrinsic.String.Build("Attached is your Quote # {0}{1}, Thank you{1} {2}.",v.Global.sQuote,V.Ambient.NewLine,V.Ambient.CompanyName,V.Local.sText) 
	Function.Intrinsic.Control.EndIf	
F.Intrinsic.Control.EndIf

'Replace the place holders quote and customer and company
F.Intrinsic.String.Replace(V.Local.sText,"{{QUOTE}}",v.Global.sQuote,V.Local.sText)
f.Intrinsic.String.Build("SELECT NAME_CUSTOMER FROM V_CUSTOMER_MASTER WHERE CUSTOMER = '{0}' ",v.Global.sCust,v.Local.sSQL)
f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Global.sCustName)
F.Intrinsic.Control.If(v.Global.sCustName.Trim,<>,"")
	F.Intrinsic.String.Replace(V.Local.sText,"{{CUSTOMER}}",v.Global.sCustName.Trim,V.Local.sText)
F.Intrinsic.Control.Else
	F.Intrinsic.String.Replace(V.Local.sText,"{{CUSTOMER}}","Valued Customer",V.Local.sText)
F.Intrinsic.Control.EndIf
F.Intrinsic.String.Replace(V.Local.sText,"{{COMPANY}}",V.Ambient.CompanyName,V.Local.sText)
f.Global.Security.GetFullName(v.Caller.User,v.Local.sName)
f.Intrinsic.String.Replace(v.Local.sText,"{{FULLNAME}}",v.Local.sName,v.Local.sText)

'Set up the Sender name and Email
F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sSenderEmail,V.Local.sSenderName,V.Local.sSenderEmail)
'Join the Recipient list together
f.Intrinsic.String.Join(v.Global.sList,"@!@*!*",v.Local.sRcptEmail)
f.Intrinsic.String.Build("*!*{0}",v.Local.sRcptEmail,v.Local.sRcptEmail)

'Create the attachment file
f.Intrinsic.String.Build("{0}.PDF*!*{1}\3623_Quotes",v.Global.sQuote,v.Caller.FilesDir,v.Local.sAttach)
'Send the email


F.Intrinsic.String.Build("{0}{1}",V.ASCII.13,v.ASCII.10,v.Local.sCRLF)
F.Intrinsic.String.Build("[^{0}]{1}",V.ASCII.13,V.ASCII.10,V.Local.sCRLFRegex)
'Make sure that all LF have a matching CR - currently RegExMatch/RegExReplace does not work - supposedly being worked on
'so that this will work. At this time it works as long as a single LF doesn't make its way into the HTML template without a matching CR.
'F.Intrinsic.String.RegExMatch(V.Local.sText,V.Local.sCRLFRegex,V.Local.sCRLF,True,True,True,V.Local.sText)

F.Global.Messaging.QueueMessage(V.Caller.CompanyCode,V.Local.iGlobalShopUserID,"4640 Quote Email",V.Screen.F_ContactList!txtSubject.Text,V.Local.sSenderEmail,v.Local.sRcptEmail,,5,,False,,,,,,,,V.Local.sAttach,False,V.Local.sText)

'End script
F.Intrinsic.Control.CallSub(f_contactlist_unload)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(TryCatch,"Sub",V.Ambient.CurrentSubroutine,"Error",V.Ambient.ErrorNumber,"Desc",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cmdsend_click.End

Program.Sub.cbocontact_click.Start
f.Intrinsic.Control.Try

V.Local.iPos.Declare(Long)
V.Local.sEmail.Declare(String)

F.Intrinsic.Control.If(V.Screen.F_ContactList!cboContact.Text,<>,"")
	'Select contact from drop down list - populate textbox
	F.Intrinsic.String.Instr(V.Screen.F_ContactList!cboContact.Text,"<",V.Local.ipos)
	F.Intrinsic.String.mid(V.Screen.F_ContactList!cboContact.Text,V.Local.iPos,V.Local.sEmail)
	F.Intrinsic.String.Replace(V.Local.sEmail,"<","",V.Local.sEmail)
	F.Intrinsic.String.Replace(V.Local.sEmail,">","",V.Local.sEmail)
	Gui.F_ContactList.txtEmail.Text(V.Local.sEmail)
F.Intrinsic.Control.Else
	Gui.F_ContactList.txtEmail.Text("")
F.Intrinsic.Control.endif

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(TryCatch,"Sub",V.Ambient.CurrentSubroutine,"Error",V.Ambient.ErrorNumber,"Desc",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cbocontact_click.End

Program.Sub.PopContacts.Start
f.Intrinsic.Control.Try

V.Local.sSQL.Declare(String)
V.Local.sTemp.Declare(String)

'Add blank item to drop down list
Gui.F_ContactList.cboContact.AddItem("")

'Fill drop down list with contacts/emails for the customer on the order
f.Intrinsic.String.Build("SELECT RTRIM(NAME) AS NAME, RTRIM(NAME) + ' <' + IF(RTRIM(ISNULL(EMAIL1, '')) <> '',RTRIM(ISNULL(EMAIL1, '')),RTRIM(ISNULL(EMAIL2,''))) + '>' AS NAMEEMAIL FROM CONTACT WHERE CUST = '{0}' AND (RTRIM(ISNULL(Email1, '')) <> '' OR RTRIM(ISNULL(Email2, '')) <> '') ORDER BY NAME_LAST, NAME_FIRST",v.Global.sCust,v.Local.sSQL)
f.Data.Dictionary.CreateFromSQL("Contact","Con",v.Local.sSQL)
Gui.F_ContactList.cboContact.AddItems("Dictionary","Contact")
f.Data.Dictionary.Close("Contact")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(TryCatch,"Sub",V.Ambient.CurrentSubroutine,"Error",V.Ambient.ErrorNumber,"Desc",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.PopContacts.End

Program.Sub.FillList.Start
f.Intrinsic.Control.Try

V.Local.i.Declare(Long)

Gui.F_ContactList.lstEmails.ClearItems

'Fill listbox from memory array
F.Intrinsic.Control.For(V.Local.i,0,V.Global.sList.UBound,1)
	Gui.F_ContactList.lstEmails.AddItem(V.Global.sList(v.Local.i))
F.Intrinsic.Control.Next(V.Local.i)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(TryCatch,"Sub",V.Ambient.CurrentSubroutine,"Error",V.Ambient.ErrorNumber,"Desc",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.FillList.End

Program.Sub.Comments.Start
${$0$}$$}$$}$12:00:00 AM$}$False
Program.Sub.Comments.End
